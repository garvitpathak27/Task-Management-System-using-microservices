version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: task-management-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - task-management-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Zipkin for Distributed Tracing
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: task-management-zipkin
    restart: unless-stopped
    ports:
      - "9411:9411"
    networks:
      - task-management-network

  # Eureka Server for Service Discovery
  eureka-server:
    build:
      context: ./EurekaServerConfiguration
      dockerfile: Dockerfile
    container_name: task-management-eureka
    restart: unless-stopped
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - task-management-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # User Service
  user-service:
    build:
      context: ./TaskUserService
      dockerfile: Dockerfile
    container_name: task-management-user-service
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - task-management-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Task Service
  task-service:
    build:
      context: ./TaskService
      dockerfile: Dockerfile
    container_name: task-management-task-service
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - task-management-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Task Submission Service
  task-submission-service:
    build:
      context: ./TaskSubmissionService
      dockerfile: Dockerfile
    container_name: task-management-submission-service
    restart: unless-stopped
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - task-management-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # API Gateway
  api-gateway:
    build:
      context: ./APIGateWay
      dockerfile: Dockerfile
    container_name: task-management-api-gateway
    restart: unless-stopped
    ports:
      - "8090:8090"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      eureka-server:
        condition: service_healthy
      user-service:
        condition: service_healthy
      task-service:
        condition: service_healthy
      task-submission-service:
        condition: service_healthy
    networks:
      - task-management-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  mongodb_data:
    driver: local

networks:
  task-management-network:
    driver: bridge
    name: task-management-network
